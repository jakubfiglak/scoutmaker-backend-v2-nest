// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

enum UserRole {
  SCOUT
  PLAYMAKER_SCOUT
  ADMIN
}

enum AccountStatus {
  PENDING
  ACTIVE
  BLOCKED
}

model User {
  id                         String        @id @default(cuid())
  role                       UserRole      @default(SCOUT)
  status                     AccountStatus @default(PENDING)
  email                      String        @unique
  firstName                  String
  lastName                   String
  phone                      String?
  city                       String?
  password                   String
  activeRadius               Int           @default(0)
  confirmationCode           String?       @unique
  confirmationCodeExpiryDate DateTime?
  resetPasswordToken         String?       @unique
  resetPasswordExpiryDate    DateTime?
  createdAt                  DateTime      @default(now())
  updatedAt                  DateTime      @updatedAt

  // Relation fields
  region   Region @relation(fields: [regionId], references: [id])
  regionId String
  clubs    Club[]
}

model Country {
  id         String   @id @default(cuid())
  name       String   @unique
  code       String   @unique
  isEuMember Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  // Relation fields
  regions Region[]
}

model Region {
  id        String   @id @default(cuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relation fields
  country   Country @relation(fields: [countryId], references: [id])
  countryId String
  users     User[]
  clubs     Club[]

  @@unique([name, countryId])
}

model Club {
  id         String   @id @default(cuid())
  name       String
  lnpID      String?
  city       String?
  postalCode String?
  street     String?
  website    String?
  twitter    String?
  facebook   String?
  instagram  String?
  isPublic   Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt


  // Relation fields
  region   Region @relation(fields: [regionId], references: [id])
  regionId String
  author   User   @relation(fields: [authorId], references: [id])
  authorId String
}
